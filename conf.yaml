select_sql :
  select_movie_review : "select  * from Movie_review_raw"
  delete_movie_raw : "delete from  Movie_review_raw where Review_month in(select distinct Review_month from Movie_review_raw_temp)"
  insert_movie_raw : "Insert into Movie_review_raw select * from Movie_review_raw_temp"
  insert_movie_details_fact : "Insert into Movie_review_Fact_details select * from Movie_review_Fact_details_temp"
  truncate_sql : "delete from Movie_review_fact"
  insert_mart_sql: "insert into Movie_review_fact(MovieID,\n                     Review_month,\n\
  \                     Monthly_rating_avg,\n                     Monthly_rating_cnt,\n\
  \                     Overall_rating_avg,\n                     Overall_rating_cnt\n\
  \                       )\n                    select \n                    MovieID\
  \ ,\n                    Review_month,\n                    avg(avg) over(partition\
  \ by MovieID,Review_month) Monthly_rating_avg,\n                    sum(count) over(partition\
  \ by MovieID,Review_month ) Monthly_rating_cnt,\n                    avg(avg) over(partition\
  \ by MovieID order by Review_month ) Overall_rating_avg,\n                    sum(count)\
  \ over(partition by MovieID order by Review_month) Overall_rating_cnt\n        \
  \            from \n                    (select \n\t                count(*) count,\n\
  \t                Avg(Rating) avg,\n\t                MovieID,\n\t             \
  \   Review_month\tfrom \n\t                Movie_review_Fact_details\n\t       \
  \         group by MovieID,Review_month)"
  report_sql: "select Title as \"Movie Name\",\n                             upper(Review_mon)\
  \ as \"Review Month\",\n                             Overall_rating_avg as \"Rating_Average\"\
  ,\n                             Overall_rating_cnt as Overall_rating_cnt\n     \
  \                        from\n                             (select mdim.Title,\n\
  \                                ddim.Review_mon,fct.Overall_rating_avg,\n     \
  \                           fct.Overall_rating_cnt ,\n                         \
  \       max(fct.Overall_rating_cnt) over(partition by Review_month)/2 cntavg\n \
  \                           from Movie_review_fact fct ,\n                     \
  \       MovieDIM mdim ,\n                            DateDim ddim \n           \
  \                 where  mdim.movieID=fct.MovieID\n                            and\
  \ ddim.Month=fct.Review_month\n                            and ddim.Month = :jobmonth\n\
  \                            order by  fct.Overall_rating_avg desc)  a where a.Overall_rating_cnt\
  \ > a.cntavg\n                            limit 15\n"
  merge_sql: "insert into Movie_ratings_monthly_01(MovieID,Rating_1_count,Rating_2_count,Rating_3_count,Rating_4_count,\n\
  Rating_5_count,Rating_monthly_count,Rating_monthly_avg,Review_month)\nselect t.MovieID,t.Rating1,t.Rating2,t.Rating3,t.Rating4,t.Rating5,t.Rating_count,t.monthly_avg,t.Review_month\n\
  from Movie_ratings_monthly_temp t where t.MovieID not in (select distinct MovieID\
  \ from Movie_ratings_monthly)\nUNION ALL\nselect t.MovieID,t.Rating1+ t1.Rating_1_count,t.Rating2\
  \ + t1.Rating_2_count,t.Rating3 + t1.Rating_3_count,\nt.Rating4 +t1.Rating_4_count,t.Rating5\
  \ + t1.Rating_5_count,t.Rating_count,t.monthly_avg,t.Review_month\nfrom Movie_ratings_monthly_temp\
  \ t,(select * from Movie_ratings_monthly  \nwhere Review_month ==(select max(Review_month)\
  \ from Movie_ratings_monthly)) t1\nwhere t.MovieID =t1.MovieID\nUNION ALL \nselect\
  \ t.MovieID,t.Rating_1_count,t.Rating_2_count,t.Rating_3_count,t.Rating_4_count,\n\
  t.Rating_5_count,0,0,t1.Review_month\nfrom Movie_ratings_monthly t ,(select max(Review_month)\
  \ Review_month from  Movie_ratings_monthly_temp) t1\nwhere t.Review_month ==(select\
  \ max(Review_month) from Movie_ratings_monthly)\nand  t.MovieID not in (select distinct\
  \ MovieID from Movie_ratings_monthly_temp);\n"
  monthly_rating_insert : insert into Movie_ratings_monthly select * from  Movie_ratings_monthly_01
  delete_movie_rating_monthly : "delete from  Movie_ratings_monthly where Review_month in(select distinct Review_month from Movie_ratings_monthly_01)"
  delete_temp_monthly_insert : delete from Movie_ratings_monthly_01
  select_job_date : "select  RUNDATE from JOB_RUN_DATE" 
  create_run_date : "Create table if not exists JOB_RUN_DATE(RUNDATE  DATE)"
  update_sql: "  update Movie_ratings_monthly  \n  set OverallCount =Rating_1_count\
  \ + Rating_2_count +Rating_3_count+Rating_4_count+Rating_5_count,\n      Overall_rating_avg\
  \ =round((Rating_1_count*1 + Rating_2_count*2 +Rating_3_count*3+Rating_4_count*4+Rating_5_count*5)/\n\
  \t cast (Rating_1_count + Rating_2_count +Rating_3_count+Rating_4_count+Rating_5_count\
  \  as real),3)\n\t  where Review_month =(select max(cast(Review_month as integqer))\
  \ from Movie_ratings_monthly_01)\n"
  report_sql_pdf: " with last_six_months as (\nselect Month from DateDim where Month <=:jobmonth\
  \ order by Month desc limit 6),\nmax_review_count as (\nselect \nmax(a.Rating_monthly_count)/2\
  \  max_count,\nReview_month from \n  Movie_ratings_monthly a,last_six_months b\n\
  where a.Review_month =b.Month\ngroup by Review_month),\nmovie_six_months as\n(select\
  \ a.MovieID,\na.Rating_monthly_count,\na.Review_month,\na.Rating_monthly_avg,\n\
  a.OverallCount,\na.Overall_rating_avg,\nrow_number() over(PARTITION by a.Review_month\
  \ order by Rating_monthly_avg desc) rnk\nfrom\nMovie_ratings_monthly a,max_review_count\
  \ c\nwhere a.Review_month=c.Review_month\nand a.Rating_monthly_count >= c.max_count)\n\
  select\na.MovieID, \na.rnk ,\nb.Title,\na.Rating_monthly_count,\na.Review_month,\n\
  a.Rating_monthly_avg,\na.OverallCount,\na.Overall_rating_avg\n from movie_six_months\
  \ a,MovieDIM b\n where a.MovieID =b.MovieID and \n  a.rnk <= 15\n  order by b.Title,a.Review_month\
  \ desc\n\n"
  last_6_months: "select Month from DateDim where Month < :jobmonth order by Month desc limit 6"
numtopmovies : 10
